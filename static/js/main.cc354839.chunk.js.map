{"version":3,"sources":["contexts/ScoreContext.js","components/BestScore.js","components/CurrentScore.js","clubs.js","clubs/Agen.png","clubs/Bath.png","clubs/Bayonne.png","clubs/Benetton.png","clubs/Bordeaux.png","clubs/Bristol.png","clubs/Brive.png","clubs/Cardiff.png","clubs/Castre.png","clubs/Clermont.png","clubs/Connacht.png","clubs/Dragons.png","clubs/Edinburgh.png","clubs/Exeter.png","clubs/Glasgow.png","clubs/Gloucester.png","clubs/Harlequins.png","clubs/LaRochelle.png","clubs/Leicester.png","clubs/Leinster.png","clubs/LondonIrish.png","clubs/Lyon.png","clubs/Montpellier.png","clubs/Munster.png","clubs/Newcastle.png","clubs/Northampton.png","clubs/Ospreys.png","clubs/Pau.png","clubs/Racing.png","clubs/Sale.png","clubs/Scarlets.png","clubs/StadeFrancais.png","clubs/Toulon.png","clubs/Toulouse.png","clubs/Ulster.png","clubs/Wasps.png","clubs/Worcester.png","clubs/Zebre.png","components/Game.js","components/HeaderComp.js","components/ScoreScreen.js","App.js","reportWebVitals.js","index.js"],"names":["ScoreContext","createContext","ScoreContextProvider","props","useState","bestScore","currentScore","tempBestScore","scores","setScores","Provider","value","updateCurrentScore","resetScores","children","BestScore","useContext","className","CurrentScore","clubArray","name","source","Game","teamsSelected","setTeamsSelected","selectTeam","e","includes","target","alt","reorderTeams","document","getElementById","style","visibility","concat","shuffleTeams","sort","Math","random","console","log","a","b","map","club","onClick","src","HeaderComp","ScoreScreen","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc354839.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\n\nexport const ScoreContext = createContext();\n\nconst ScoreContextProvider = (props) => {\n\n    // records and allows for updating of state\n    const [scores, setScores ] = useState({\n        bestScore: 0,\n        currentScore:0,\n        tempBestScore:0\n    })\n    \n    // updates current score by setting new state\n    const updateCurrentScore = () =>{\n        // if the temporary best score is lower than the current score then it is incremented by 1\n        if(scores.currentScore >= scores.tempBestScore){\n            setScores({\n                bestScore:scores.bestScore, \n                currentScore:scores.currentScore + 1,\n                tempBestScore:scores.tempBestScore + 1\n            })\n        }\n        else{\n            // if the temporary best score is higher than the current score then only the current score changes\n            setScores({\n                bestScore:scores.bestScore,\n                currentScore:scores.currentScore + 1,\n                tempBestScore:scores.tempBestScore\n            })\n        }      \n    }\n\n    // current score is reset to 0 and the bestScore is set to the temporary best score\n    const resetScores = () =>{\n        setScores({\n            bestScore:scores.tempBestScore,\n            currentScore:0,\n            tempBestScore:scores.tempBestScore\n        })\n    }\n\n    return (\n        // The scores state date, ands the functions to manage them, are passed to recieving components\n        <ScoreContext.Provider value={{scores, updateCurrentScore:updateCurrentScore, resetScores:resetScores}}>\n            {props.children}\n        </ScoreContext.Provider>\n     );\n}\n \nexport default ScoreContextProvider;","import React, {useContext} from 'react';\nimport { ScoreContext } from '../contexts/ScoreContext';\n\nconst BestScore = () => {\n\n    // Uses the ScoreContext to dynamically update the best score in the DOM\n    const {scores} = useContext(ScoreContext) \n\n\n    return ( \n        <div className=\"best-score\">\n            <p className=\"score\">Best Score</p>\n            <p className=\"score\">{scores.bestScore}</p>\n        </div>\n        \n     );\n}\n \nexport default BestScore;","import React, { useContext } from 'react';\nimport { ScoreContext } from '../contexts/ScoreContext';\n\nconst CurrentScore = () => {\n\n    // Uses the ScoreContext to dynamically update the current score in the DOM\n    const {scores} = useContext(ScoreContext);\n\n    return ( \n        <div className=\"current-score\">\n            <p className=\"score\">Current Score</p>\n            <p className=\"score\">{scores.currentScore}</p>\n        </div>\n     );\n}\n \nexport default CurrentScore;","import agenSRC from './clubs/Agen.png'\nimport bathSRC from './clubs/Bath.png'\nimport bayonneSRC from './clubs/Bayonne.png'\nimport benettonSRC from './clubs/Benetton.png'\nimport bordeauxSRC from './clubs/Bordeaux.png'\nimport bristolSRC from './clubs/Bristol.png'\nimport briveSRC from './clubs/Brive.png'\nimport cardiffSRC from './clubs/Cardiff.png'\nimport castreSRC from './clubs/Castre.png'\nimport clermontSRC from './clubs/Clermont.png'\nimport connachtSRC from './clubs/Connacht.png'\nimport dragonsSRC from './clubs/Dragons.png'\nimport edinburghSRC from './clubs/Edinburgh.png'\nimport exeterSRC from './clubs/Exeter.png'\nimport glasgowSRC from './clubs/Glasgow.png'\nimport gloucesterSRC from './clubs/Gloucester.png'\nimport harlequinsSRC from './clubs/Harlequins.png'\nimport laRochelleSRC from './clubs/LaRochelle.png'\nimport leicesterSRC from './clubs/Leicester.png'\nimport leinsterSRC from './clubs/Leinster.png'\nimport londonIrishSRC from './clubs/LondonIrish.png'\nimport lyonSRC from './clubs/Lyon.png'\nimport montpellierSRC from './clubs/Montpellier.png'\nimport munsterSRC from './clubs/Munster.png'\nimport newcastleSRC from './clubs/Newcastle.png'\nimport northamptonSRC from './clubs/Northampton.png'\nimport ospreysSRC from './clubs/Ospreys.png'\nimport pauSRC from './clubs/Pau.png'\nimport racingSRC from './clubs/Racing.png'\nimport saleSRC from './clubs/Sale.png'\nimport scarletsSRC from './clubs/Scarlets.png'\nimport stadeFrancaisSRC from './clubs/StadeFrancais.png'\nimport toulonSRC from './clubs/Toulon.png'\nimport toulouseSRC from './clubs/Toulouse.png'\nimport ulsterSRC from './clubs/Ulster.png'\nimport waspsSRC from './clubs/Wasps.png'\nimport worcesterSRC from './clubs/Worcester.png'\nimport zebreSRC from './clubs/Zebre.png'\n\nconst clubArray = [\n    {name:'agen', source: agenSRC},\n    {name:'bath', source: bathSRC},\n    {name:'bayonne', source: bayonneSRC},\n    {name:'benetton', source: benettonSRC},\n    {name:'bordeaux', source: bordeauxSRC},\n    {name:'bristol', source: bristolSRC},\n    {name:'brive', source: briveSRC},\n    {name:'cardiff', source: cardiffSRC},\n    {name:'castre', source: castreSRC},\n    {name:'clermont', source: clermontSRC},\n    {name:'connacht', source: connachtSRC},\n    {name:'dragons', source: dragonsSRC},\n    {name:'edinburgh', source: edinburghSRC},\n    {name:'exeter', source: exeterSRC},\n    {name:'glasgow', source: glasgowSRC},\n    {name:'gloucester', source: gloucesterSRC},\n    {name:'harlequins', source: harlequinsSRC},\n    {name:'la Rochelle', source: laRochelleSRC},\n    {name:'leicester', source: leicesterSRC},\n    {name:'leinster', source: leinsterSRC},\n    {name:'londonIrish', source: londonIrishSRC},\n    {name:'lyon', source: lyonSRC},\n    {name:'montpellier', source: montpellierSRC},\n    {name:'munster', source: munsterSRC},\n    {name:'newcastle', source: newcastleSRC},\n    {name:'northampton', source: northamptonSRC},\n    {name:'ospreys', source: ospreysSRC},\n    {name:'pau', source: pauSRC},\n    {name:'racing', source: racingSRC},\n    {name:'sale', source: saleSRC},\n    {name:'scarlets', source: scarletsSRC},\n    {name:'stade Francais', source: stadeFrancaisSRC},\n    {name:'toulon', source: toulonSRC},\n    {name:'toulouse', source: toulouseSRC},\n    {name:'ulster', source: ulsterSRC},\n    {name:'wasps', source: waspsSRC},\n    {name:'worcester', source: worcesterSRC},\n    {name:'zebre', source: zebreSRC}\n]\n\n\nexport default clubArray\n","export default __webpack_public_path__ + \"static/media/Agen.d985186d.png\";","export default __webpack_public_path__ + \"static/media/Bath.99828048.png\";","export default __webpack_public_path__ + \"static/media/Bayonne.f1c438e2.png\";","export default __webpack_public_path__ + \"static/media/Benetton.d5155586.png\";","export default __webpack_public_path__ + \"static/media/Bordeaux.c0faba3f.png\";","export default __webpack_public_path__ + \"static/media/Bristol.1c791ce1.png\";","export default __webpack_public_path__ + \"static/media/Brive.4a2bcd23.png\";","export default __webpack_public_path__ + \"static/media/Cardiff.7964f4c1.png\";","export default __webpack_public_path__ + \"static/media/Castre.3e63cc3d.png\";","export default __webpack_public_path__ + \"static/media/Clermont.031a992f.png\";","export default __webpack_public_path__ + \"static/media/Connacht.0e7b134f.png\";","export default __webpack_public_path__ + \"static/media/Dragons.0856ef3a.png\";","export default __webpack_public_path__ + \"static/media/Edinburgh.a3deb2eb.png\";","export default __webpack_public_path__ + \"static/media/Exeter.0f4c071d.png\";","export default __webpack_public_path__ + \"static/media/Glasgow.6b225e79.png\";","export default __webpack_public_path__ + \"static/media/Gloucester.753931c2.png\";","export default __webpack_public_path__ + \"static/media/Harlequins.f9b939c3.png\";","export default __webpack_public_path__ + \"static/media/LaRochelle.87037547.png\";","export default __webpack_public_path__ + \"static/media/Leicester.d60f99b2.png\";","export default __webpack_public_path__ + \"static/media/Leinster.aafcf2e5.png\";","export default __webpack_public_path__ + \"static/media/LondonIrish.17bdf0ba.png\";","export default __webpack_public_path__ + \"static/media/Lyon.c8f48926.png\";","export default __webpack_public_path__ + \"static/media/Montpellier.8685ccc7.png\";","export default __webpack_public_path__ + \"static/media/Munster.8ddc2be1.png\";","export default __webpack_public_path__ + \"static/media/Newcastle.f8bba735.png\";","export default __webpack_public_path__ + \"static/media/Northampton.cdbb2d8f.png\";","export default __webpack_public_path__ + \"static/media/Ospreys.b002bcf2.png\";","export default __webpack_public_path__ + \"static/media/Pau.3c819a66.png\";","export default __webpack_public_path__ + \"static/media/Racing.f986ec78.png\";","export default __webpack_public_path__ + \"static/media/Sale.61970d10.png\";","export default __webpack_public_path__ + \"static/media/Scarlets.4754c365.png\";","export default __webpack_public_path__ + \"static/media/StadeFrancais.d016e492.png\";","export default __webpack_public_path__ + \"static/media/Toulon.24a99984.png\";","export default __webpack_public_path__ + \"static/media/Toulouse.dbe0898e.png\";","export default __webpack_public_path__ + \"static/media/Ulster.cbf90f25.png\";","export default __webpack_public_path__ + \"static/media/Wasps.a43b178b.png\";","export default __webpack_public_path__ + \"static/media/Worcester.57cb6ece.png\";","export default __webpack_public_path__ + \"static/media/Zebre.fafe1de5.png\";","import React, {useContext, useState} from 'react';\nimport clubArray from '../clubs'\nimport { ScoreContext } from '../contexts/ScoreContext';\n\n\nconst Game = () => {\n\n\n    // functions can manage the state data in the ScoreContext\n    const {updateCurrentScore, resetScores} = useContext(ScoreContext)\n\n    // useState Hook initilaisation\n    const [teamsSelected, setTeamsSelected] = useState([]) \n\n    // called when a team is selected\n    const selectTeam = (e) =>{\n\n        // if a team is in the teamsSelected array then the game is over\n        if(teamsSelected.includes(e.target.alt) === true){\n            // teamsSelected array is reset\n            setTeamsSelected([])\n            // scores are reset and best score updated in the ScoreContext if needed\n            resetScores();\n            reorderTeams();\n            const overlay = document.getElementById(\"score-overlay\")\n            overlay.style.visibility = \"visible\"\n        }\n        else{\n            // if the team is a valid choice then it is added to the teamsSelected array\n            setTeamsSelected((teamsSelected)=> teamsSelected.concat(e.target.alt))\n\n            // the current score is then updated in the ScoreContext\n            updateCurrentScore()      \n        }\n\n\n    }\n\n    const shuffleTeams = () =>{\n        clubArray.sort(() => Math.random() - 0.5);\n        console.log('shuffle');\n        return clubArray\n    }\n\n    const reorderTeams = () =>{\n        clubArray.sort((a,b) => a.name > b.name ? 1 : -1);\n        console.log('order');\n        return clubArray\n    }\n\n\n    return (\n        // dynamically renders each team from the clubArray to create the game board\n        <ul className=\"gameBoard\">\n            { clubArray.map(club =>{\n                return(\n                    <li onClick={selectTeam} key={club.name} >\n                        <img className=\"clubTile\" src={club.source} alt={club.name} onClick={shuffleTeams}></img>\n                    </li>\n                )\n            })}\n        </ul>\n     );\n}\n \nexport default Game;","import React from 'react';\n\nconst HeaderComp = () => {\n    return ( \n        <div className=\"headerContainer\">\n            <header>Rugby Club Memory Game</header>\n            <p> Select as many teams as you can without repeating yourself</p>\n            <p> The board will shuffle between selections.</p>\n            <p> Select a team to start the game</p>\n        </div>\n     );\n}\n \nexport default HeaderComp;","import React, { useContext } from 'react';\nimport { ScoreContext } from '../contexts/ScoreContext';\n\nconst ScoreScreen = () => {\n\n    // Uses the ScoreContext to dynamically update the best score on game over score screen\n    const {scores} = useContext(ScoreContext);\n\n    const toggleDisplay = () =>{\n        const overlay = document.getElementById(\"score-overlay\")\n        overlay.style.visibility = \"hidden\"\n    }\n\n    return (\n        <div className=\"score-screen-container\" id=\"score-overlay\">\n            <div className=\"score-screen\">\n                <p>Game Over!</p>\n                <p>Best Score</p>\n                <p>{scores.bestScore}</p>\n                <button onClick={toggleDisplay}>Play again?</button>\n            </div>\n        </div>\n        \n     );\n}\n \nexport default ScoreScreen;","import './App.css';\nimport BestScore from './components/BestScore';\nimport CurrentScore from './components/CurrentScore';\nimport Game from './components/Game';\nimport HeaderComp from './components/HeaderComp';\nimport ScoreScreen from './components/ScoreScreen';\nimport ScoreContextProvider from './contexts/ScoreContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderComp/>\n      <ScoreContextProvider>\n      <ScoreScreen/>\n      <div className=\"game-container\">\n            <CurrentScore/>\n            <Game/>\n            <BestScore/>\n      </div>\n      </ScoreContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}